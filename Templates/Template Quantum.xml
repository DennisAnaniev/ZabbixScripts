<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>3.0</version>
    <date>2019-08-14T05:32:56Z</date>
    <groups>
        <group>
            <name>Templates :: Storages</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template Quantum</template>
            <name>Template Quantum</name>
            <description/>
            <groups>
                <group>
                    <name>Templates :: Storages</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Quantum :: Components</name>
                </application>
                <application>
                    <name>Quantum :: Drive ports</name>
                </application>
                <application>
                    <name>Quantum :: Drives</name>
                </application>
                <application>
                    <name>Quantum :: Library</name>
                </application>
                <application>
                    <name>Quantum :: Robot</name>
                </application>
                <application>
                    <name>Quantum :: System</name>
                </application>
                <application>
                    <name>Quantum :: Tower</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Number of free drives</name>
                    <type>10</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;drive&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Free&quot;]</key>
                    <delay>600</delay>
                    <history>90</history>
                    <trends>365</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Quantum :: System</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>System library state</name>
                    <type>10</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;library&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;State&quot;]</key>
                    <delay>600</delay>
                    <history>90</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>Quantum :: Library</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>Components</name>
                    <type>10</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;component&quot;, &quot;--item&quot;, &quot;Discovery&quot;]</key>
                    <delay>600</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>30</lifetime>
                    <description/>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#NAME} status</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;component&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>Quantum :: Components</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;component&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_COMPONENT_STATUS_HIGH}$)}=1</expression>
                            <name>Component {#NAME} status is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;component&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_COMPONENT_STATUS_WARNING}$)}=1</expression>
                            <name>Component {#NAME} status is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                </discovery_rule>
                <discovery_rule>
                    <name>Drives</name>
                    <type>10</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;drive&quot;, &quot;--item&quot;, &quot;Discovery&quot;]</key>
                    <delay>600</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>30</lifetime>
                    <description/>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#NAME} mode</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;drive&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Mode&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>Quantum :: Drives</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>{#NAME} state</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;drive&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;State&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>Quantum :: Drives</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>{#NAME} status</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;drive&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>Quantum :: Drives</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;drive&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Mode&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].count(1200,{$QUANTUM_DRIVE_MODE_WARNING})}&gt;2</expression>
                            <name>Drive {#NAME} is in {ITEM.VALUE} mode</name>
                            <url/>
                            <status>0</status>
                            <priority>1</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;drive&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Mode&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_DRIVE_MODE_INFO}$)}=1</expression>
                            <name>Drive {#NAME} is in {ITEM.VALUE} mode</name>
                            <url/>
                            <status>0</status>
                            <priority>1</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;drive&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;State&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_DRIVE_STATE_WARNING}$)}=1</expression>
                            <name>Drive {#NAME} is in {ITEM.VALUE} state</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;drive&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_DRIVE_STATUS_HIGH}$)}=1</expression>
                            <name>Drive {#NAME} status is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;drive&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_DRIVE_STATUS_INFO1}$)}=1</expression>
                            <name>Drive {#NAME} status is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>1</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;drive&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_DRIVE_STATUS_INFO2}$)}=1</expression>
                            <name>Drive {#NAME} status is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>1</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;drive&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_DRIVE_STATUS_INFO3}$)}=1</expression>
                            <name>Drive {#NAME} status is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>1</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;drive&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_DRIVE_STATUS_WARNING}$)}=1</expression>
                            <name>Drive {#NAME} status is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                </discovery_rule>
                <discovery_rule>
                    <name>Drive ports</name>
                    <type>10</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;port&quot;, &quot;--item&quot;, &quot;Discovery&quot;]</key>
                    <delay>600</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>30</lifetime>
                    <description/>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#NAME} position</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;port&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Position&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>365</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>Quantum :: Drive ports</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>{#NAME} status</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;port&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>Quantum :: Drive ports</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;port&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_PORT_STATUS_WARNING}$)}=1 and {Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;port&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Position&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}=1</expression>
                            <name>Port {#NAME} status is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                </discovery_rule>
                <discovery_rule>
                    <name>Robots</name>
                    <type>10</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;robot&quot;, &quot;--item&quot;, &quot;Discovery&quot;]</key>
                    <delay>600</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>30</lifetime>
                    <description/>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#NAME} state</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;robot&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;State&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>Quantum :: Robot</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>{#NAME} status</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;robot&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>Quantum :: Robot</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;robot&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_ROBOT_STATUS_HIGH1}$)}=1</expression>
                            <name>Robot {#NAME} status is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;robot&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_ROBOT_STATUS_HIGH2}$)}=1</expression>
                            <name>Robot {#NAME} status is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;robot&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_ROBOT_STATUS_HIGH3}$)}=1</expression>
                            <name>Robot {#NAME} status is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;robot&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_ROBOT_STATUS_INFO}$)}=1</expression>
                            <name>Robot {#NAME} status is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>1</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                </discovery_rule>
                <discovery_rule>
                    <name>Towers</name>
                    <type>10</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;tower&quot;, &quot;--item&quot;, &quot;Discovery&quot;]</key>
                    <delay>600</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>30</lifetime>
                    <description/>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#NAME} mode</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;tower&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Mode&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>Quantum :: Tower</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>{#NAME} state</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;tower&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;State&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>Quantum :: Tower</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>{#NAME} status</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;tower&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>Quantum :: Tower</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;tower&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Mode&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_TOWER_MODE_HIGH1}$)}=1</expression>
                            <name>Tower {#NAME} is in {ITEM.VALUE} mode</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;tower&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Mode&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_TOWER_MODE_HIGH2}$)}=1</expression>
                            <name>Tower {#NAME} is in {ITEM.VALUE} mode</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;tower&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;State&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_TOWER_STATE_WARNING}$)}=1</expression>
                            <name>Tower {#NAME} is in {ITEM.VALUE} state</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;tower&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_TOWER_STATUS_HIGH1}$)}=1</expression>
                            <name>Tower {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;tower&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_TOWER_STATUS_HIGH2}$)}=1</expression>
                            <name>Tower {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;tower&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_TOWER_STATUS_HIGH3}$)}=1</expression>
                            <name>Tower {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;tower&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Status&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].iregexp(^{$QUANTUM_TOWER_STATUS_INFO}$)}=1</expression>
                            <name>Tower {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>1</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$QUANTUM_COMPONENT_STATUS_HIGH}</macro>
                    <value>Failed</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_COMPONENT_STATUS_WARNING}</macro>
                    <value>Warning</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_DRIVE_MODE_INFO}</macro>
                    <value>Unknown</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_DRIVE_MODE_WARNING}</macro>
                    <value>Offline</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_DRIVE_STATE_INFO1}</macro>
                    <value>Unknown</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_DRIVE_STATE_INFO2}</macro>
                    <value>Pending</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_DRIVE_STATE_WARNING}</macro>
                    <value>Varied Off</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_DRIVE_STATUS_HIGH}</macro>
                    <value>Degraded</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_DRIVE_STATUS_INFO1}</macro>
                    <value>Unknown</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_DRIVE_STATUS_INFO2}</macro>
                    <value>Initializing</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_DRIVE_STATUS_INFO3}</macro>
                    <value>Not Installed</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_DRIVE_STATUS_WARNING}</macro>
                    <value>Failed</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_LIBRARY_STATE_HIGH}</macro>
                    <value>Offline</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_PORT_STATUS_WARNING}</macro>
                    <value>Down</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_ROBOT_STATUS_HIGH1}</macro>
                    <value>Unknown</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_ROBOT_STATUS_HIGH2}</macro>
                    <value>Failed</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_ROBOT_STATUS_HIGH3}</macro>
                    <value>N/A</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_ROBOT_STATUS_INFO}</macro>
                    <value>Initializing</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_TOWER_MODE_HIGH1}</macro>
                    <value>Offline</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_TOWER_MODE_HIGH2}</macro>
                    <value>Unknown</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_TOWER_STATE_WARNING}</macro>
                    <value>Varied Off</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_TOWER_STATUS_HIGH1}</macro>
                    <value>Unknown</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_TOWER_STATUS_HIGH2}</macro>
                    <value>Failed</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_TOWER_STATUS_HIGH3}</macro>
                    <value>Not Ready</value>
                </macro>
                <macro>
                    <macro>{$QUANTUM_TOWER_STATUS_INFO}</macro>
                    <value>Initializing</value>
                </macro>
            </macros>
            <templates>
                <template>
                    <name>Template ICMP Ping</name>
                </template>
            </templates>
            <screens/>
        </template>
    </templates>
    <triggers>
        <trigger>
            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;library&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;State&quot;].iregexp(^{$QUANTUM_LIBRARY_STATE_HIGH}$)}=1</expression>
            <name>Library {HOST.NAME} mode is &quot;{ITEM.VALUE}&quot;</name>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <dependencies/>
        </trigger>
        <trigger>
            <expression>{Template Quantum:quantum.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;drive&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Free&quot;].change()}&lt;&gt;0</expression>
            <name>Number of free drives is {ITEM.VALUE}</name>
            <url/>
            <status>1</status>
            <priority>1</priority>
            <description/>
            <type>0</type>
            <dependencies/>
        </trigger>
    </triggers>
</zabbix_export>
