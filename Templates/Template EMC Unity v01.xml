<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>3.0</version>
    <date>2019-08-14T05:32:40Z</date>
    <groups>
        <group>
            <name>Templates :: Storages</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template EMC Unity v01</template>
            <name>Template EMC Unity v01</name>
            <description/>
            <groups>
                <group>
                    <name>Templates :: Storages</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>EMC Unity::Disks</name>
                </application>
                <application>
                    <name>EMC Unity::Enclosures</name>
                </application>
                <application>
                    <name>EMC Unity::FC ports</name>
                </application>
                <application>
                    <name>EMC Unity::LUNs</name>
                </application>
                <application>
                    <name>EMC Unity::Pools</name>
                </application>
                <application>
                    <name>EMC Unity::Power Supplys</name>
                </application>
                <application>
                    <name>EMC Unity::Storage Processors</name>
                </application>
                <application>
                    <name>EMC Unity::System</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>Enclosures (DAE) data</name>
                    <type>10</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dae&quot;, &quot;--item&quot;, &quot;Data&quot;]</key>
                    <delay>600</delay>
                    <history>90</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>EMC Unity::Enclosures</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Disks data</name>
                    <type>10</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;disk&quot;, &quot;--item&quot;, &quot;Data&quot;]</key>
                    <delay>600</delay>
                    <history>90</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>EMC Unity::Disks</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Enclosures (DPE) data</name>
                    <type>10</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dpe&quot;, &quot;--item&quot;, &quot;Data&quot;]</key>
                    <delay>600</delay>
                    <history>90</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>EMC Unity::Enclosures</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>FC ports data</name>
                    <type>10</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;fcp&quot;, &quot;--item&quot;, &quot;Data&quot;]</key>
                    <delay>600</delay>
                    <history>90</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>EMC Unity::FC ports</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>System General State</name>
                    <type>10</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;gs&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;]</key>
                    <delay>600</delay>
                    <history>30</history>
                    <trends>90</trends>
                    <status>0</status>
                    <value_type>3</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>EMC Unity::System</name>
                        </application>
                    </applications>
                    <valuemap>
                        <name>Unity system state</name>
                    </valuemap>
                    <logtimefmt/>
                </item>
                <item>
                    <name>System I/O</name>
                    <type>10</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;gs&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;IO&quot;]</key>
                    <delay>300</delay>
                    <history>30</history>
                    <trends>90</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>IO/s</units>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>EMC Unity::System</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>System Response Time</name>
                    <type>10</type>
                    <snmp_community/>
                    <multiplier>1</multiplier>
                    <snmp_oid/>
                    <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;gs&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;]</key>
                    <delay>300</delay>
                    <history>30</history>
                    <trends>90</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>ms</units>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>0.001</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>EMC Unity::System</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>System Throughput</name>
                    <type>10</type>
                    <snmp_community/>
                    <multiplier>1</multiplier>
                    <snmp_oid/>
                    <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;gs&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Throughput&quot;]</key>
                    <delay>300</delay>
                    <history>30</history>
                    <trends>90</trends>
                    <status>0</status>
                    <value_type>0</value_type>
                    <allowed_hosts/>
                    <units>Bps</units>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1000</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>EMC Unity::System</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>LUNs data</name>
                    <type>10</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Data&quot;]</key>
                    <delay>600</delay>
                    <history>90</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>EMC Unity::LUNs</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Pools data</name>
                    <type>10</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;pool&quot;, &quot;--item&quot;, &quot;Data&quot;]</key>
                    <delay>600</delay>
                    <history>90</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>EMC Unity::Pools</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Power Supplies data</name>
                    <type>10</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;ps&quot;, &quot;--item&quot;, &quot;Data&quot;]</key>
                    <delay>600</delay>
                    <history>90</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>EMC Unity::Power Supplys</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
                <item>
                    <name>Storage Processors data</name>
                    <type>10</type>
                    <snmp_community/>
                    <multiplier>0</multiplier>
                    <snmp_oid/>
                    <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;sp&quot;, &quot;--item&quot;, &quot;Data&quot;]</key>
                    <delay>600</delay>
                    <history>90</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <delta>0</delta>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <formula>1</formula>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <data_type>0</data_type>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>EMC Unity::Storage Processors</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>Enclosures (DAE)</name>
                    <type>10</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dae&quot;, &quot;--item&quot;,  &quot;Discovery&quot;]</key>
                    <delay>86400</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>1</lifetime>
                    <description/>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#NAME} state</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dae&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EMC Unity::Enclosures</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>Unity enclosures (DAE) state</name>
                            </valuemap>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>{#NAME} temperature</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dae&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Temperature&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>1200</delay>
                            <history>30</history>
                            <trends>90</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>°C</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EMC Unity::Enclosures</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dae&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}=({$UNITY_ENCLOSURES_SATE_DISASTER})</expression>
                            <name>Enclosures (DAE) {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>5</priority>
                            <description>The DPE has a disk drivetype mismatch.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dae&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}=({$UNITY_ENCLOSURES_SATE_HIGH})</expression>
                            <name>Enclosures (DAE) {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dae&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}=({$UNITY_ENCLOSURES_SATE_INFORMATION})</expression>
                            <name>Enclosures (DAE) {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>1</priority>
                            <description>The health of the component cannot be determined.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dae&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}=({$UNITY_ENCLOSURES_SATE_WARNING})</expression>
                            <name>Enclosures (DAE) {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description>The DPE is adjusting the communication speed.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dae&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Temperature&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}&gt;({$UNITY_ENCLOSURES_TEMPERATURE_DISASTER})</expression>
                            <name>Enclosures (DAE) {#NAME} temperature is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>5</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dae&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Temperature&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}&gt;({$UNITY_ENCLOSURES_TEMPERATURE_HIGH})</expression>
                            <name>Enclosures (DAE) {#NAME} temperature is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description/>
                            <type>0</type>
                            <dependencies>
                                <dependency>
                                    <name>Enclosures (DAE) {#NAME} temperature is {ITEM.VALUE}</name>
                                    <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dae&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Temperature&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}&gt;({$UNITY_ENCLOSURES_TEMPERATURE_DISASTER})</expression>
                                </dependency>
                            </dependencies>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                </discovery_rule>
                <discovery_rule>
                    <name>Disks</name>
                    <type>10</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;disk&quot;,  &quot;--item&quot;,  &quot;Discovery&quot;]</key>
                    <delay>86400</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>1</lifetime>
                    <description/>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#NAME} state</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;disk&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>1200</delay>
                            <history>30</history>
                            <trends>90</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EMC Unity::Disks</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>Unity disk state</name>
                            </valuemap>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;disk&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}=({$UNITY_DISKSTATE_DISASTER})</expression>
                            <name>Unity disk {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>5</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;disk&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}=({$UNITY_DISKSTATE_HIGH})</expression>
                            <name>Unity disk {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;disk&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}=({$UNITY_DISKSTATE_INF})</expression>
                            <name>Unity disk {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>1</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;disk&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}=({$UNITY_DISKSTATE_WARNING})</expression>
                            <name>Unity disk {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                </discovery_rule>
                <discovery_rule>
                    <name>Enclosures (DPE)</name>
                    <type>10</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dpe&quot;, &quot;--item&quot;,  &quot;Discovery&quot;]</key>
                    <delay>86400</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>1</lifetime>
                    <description/>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#NAME} state</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dpe&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>1200</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EMC Unity::Enclosures</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>Unity enclosures (DPE) state</name>
                            </valuemap>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>{#NAME} temperature</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dpe&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Temperature&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>1200</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>°C</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EMC Unity::Enclosures</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dpe&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}=({$UNITY_ENCLOSURES_SATE_DISASTER})</expression>
                            <name>Enclosures (DPE) {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>5</priority>
                            <description>The DPE has a disk drivetype mismatch.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dpe&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}=({$UNITY_ENCLOSURES_SATE_HIGH})</expression>
                            <name>Enclosures (DPE) {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dpe&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}=({$UNITY_ENCLOSURES_SATE_INFORMATION})</expression>
                            <name>Enclosures (DPE) {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>1</priority>
                            <description>The health of the component cannot be determined.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dpe&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}=({$UNITY_ENCLOSURES_SATE_WARNING})</expression>
                            <name>Enclosures (DPE) {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description>The DPE is adjusting the communication speed.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dpe&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Temperature&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}&gt;({$UNITY_ENCLOSURES_TEMPERATURE_DISASTER})</expression>
                            <name>Enclosures (DPE) {#NAME} temperature is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>5</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dpe&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Temperature&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}&gt;({$UNITY_ENCLOSURES_TEMPERATURE_HIGH})</expression>
                            <name>Enclosures (DPE) {#NAME} temperature is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description/>
                            <type>0</type>
                            <dependencies>
                                <dependency>
                                    <name>Enclosures (DPE) {#NAME} temperature is {ITEM.VALUE}</name>
                                    <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dpe&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Temperature&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}&gt;({$UNITY_ENCLOSURES_TEMPERATURE_DISASTER})</expression>
                                </dependency>
                            </dependencies>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                </discovery_rule>
                <discovery_rule>
                    <name>FC ports</name>
                    <type>10</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;fcp&quot;, &quot;--item&quot;,  &quot;Discovery&quot;]</key>
                    <delay>86400</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>1</lifetime>
                    <description/>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#NAME} state</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;fcp&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EMC Unity::FC ports</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>Unity FC ports state</name>
                            </valuemap>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>{#NAME} link state</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;fcp&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Link&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EMC Unity::FC ports</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;fcp&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}=({$UNITY_FCP_SATE_DISASTER})</expression>
                            <name>FC ports {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>5</priority>
                            <description>Port has failed. Replace the SP that contains the port.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;fcp&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}=({$UNITY_FCP_SATE_HIGH})</expression>
                            <name>FC ports {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description>Lost communication. Check the network connection and connected cables.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;fcp&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}=({$UNITY_FCP_SATE_INFORMATION})</expression>
                            <name>FC ports {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>1</priority>
                            <description>Status is unknown.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;fcp&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}=({$UNITY_FCP_SATE_WARNING})</expression>
                            <name>FC ports {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description>Lost communication, but the port is not in use.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;fcp&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Link&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].str(ALRT_PORT_LINK_UP)}&lt;&gt;({$UNITY_FCP_LINK_HIGH})</expression>
                            <name>FC ports {#NAME} link state is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                </discovery_rule>
                <discovery_rule>
                    <name>LUNs</name>
                    <type>10</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;,  &quot;Discovery&quot;]</key>
                    <delay>86400</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>1</lifetime>
                    <description/>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#NAME} I/O</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;IO&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>300</delay>
                            <history>30</history>
                            <trends>90</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>IO/s</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EMC Unity::LUNs</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>{#NAME} response time</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>600</delay>
                            <history>30</history>
                            <trends>90</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>ms</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>0.001</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EMC Unity::LUNs</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>{#NAME} throughput</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>1</multiplier>
                            <snmp_oid/>
                            <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Throughput&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>300</delay>
                            <history>30</history>
                            <trends>90</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>Bps</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1000</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EMC Unity::LUNs</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last(#3)}&gt;({$UNITY_LUN_REASPONSE_HIGH}) and {Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last(#2)}&gt;({$UNITY_LUN_REASPONSE_HIGH}) and {Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last(#1)}&gt;({$UNITY_LUN_REASPONSE_HIGH})</expression>
                            <name>LUN {#NAME} response time &gt; 30 ms</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description/>
                            <type>0</type>
                            <dependencies>
                                <dependency>
                                    <name>LUN {#NAME} response time is {ITEM.VALUE}</name>
                                    <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last(#3)}&gt;({$UNITY_LUN_REASPONSE_DISASTER}) and {Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last(#2)}&gt;({$UNITY_LUN_REASPONSE_DISASTER}) and {Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last(#1)}&gt;({$UNITY_LUN_REASPONSE_DISASTER})</expression>
                                </dependency>
                            </dependencies>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last(#3)}&gt;({$UNITY_LUN_REASPONSE_DISASTER}) and {Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last(#2)}&gt;({$UNITY_LUN_REASPONSE_DISASTER}) and {Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last(#1)}&gt;({$UNITY_LUN_REASPONSE_DISASTER})</expression>
                            <name>LUN {#NAME} response time is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>5</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last(#3)}&gt;({$UNITY_LUN_REASPONSE_WARNING}) and {Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last(#2)}&gt;({$UNITY_LUN_REASPONSE_WARNING}) and {Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last(#1)}&gt;({$UNITY_LUN_REASPONSE_WARNING}) and {Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last(#4)}&gt;({$UNITY_LUN_REASPONSE_WARNING})</expression>
                            <name>LUN {#NAME} response time is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description/>
                            <type>0</type>
                            <dependencies>
                                <dependency>
                                    <name>LUN {#NAME} response time &gt; 30 ms</name>
                                    <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last(#3)}&gt;({$UNITY_LUN_REASPONSE_HIGH}) and {Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last(#2)}&gt;({$UNITY_LUN_REASPONSE_HIGH}) and {Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last(#1)}&gt;({$UNITY_LUN_REASPONSE_HIGH})</expression>
                                </dependency>
                                <dependency>
                                    <name>LUN {#NAME} response time is {ITEM.VALUE}</name>
                                    <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last(#3)}&gt;({$UNITY_LUN_REASPONSE_DISASTER}) and {Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last(#2)}&gt;({$UNITY_LUN_REASPONSE_DISASTER}) and {Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last(#1)}&gt;({$UNITY_LUN_REASPONSE_DISASTER})</expression>
                                </dependency>
                            </dependencies>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                </discovery_rule>
                <discovery_rule>
                    <name>Pools</name>
                    <type>10</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;pool&quot;, &quot;--item&quot;,  &quot;Discovery&quot;]</key>
                    <delay>86400</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>1</lifetime>
                    <description/>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#NAME} free size</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;pool&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;FreeGB&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>300</delay>
                            <history>30</history>
                            <trends>90</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>B</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EMC Unity::Pools</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>{#NAME} free size in %</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;pool&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;FreePercents&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>%</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EMC Unity::Pools</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                        <item_prototype>
                            <name>{#NAME} total size</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;pool&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;TotalGB&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>300</delay>
                            <history>30</history>
                            <trends>90</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units>B</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EMC Unity::Pools</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;pool&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;FreePercents&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}&lt;({$UNITY_POOL_FREESPACE_DISASTER})</expression>
                            <name>Unity pool {#NAME} has {ITEM.VALUE} of free space</name>
                            <url/>
                            <status>0</status>
                            <priority>5</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;pool&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;FreePercents&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}&lt;({$UNITY_POOL_FREESPACE_HIGH})</expression>
                            <name>Unity pool {#NAME} has {ITEM.VALUE} of free space</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description/>
                            <type>0</type>
                            <dependencies>
                                <dependency>
                                    <name>Unity pool {#NAME} has {ITEM.VALUE} of free space</name>
                                    <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;pool&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;FreePercents&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}&lt;({$UNITY_POOL_FREESPACE_DISASTER})</expression>
                                </dependency>
                            </dependencies>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;pool&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;FreePercents&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}&lt;({$UNITY_POOL_FREESPACE_WARNING})</expression>
                            <name>Unity pool {#NAME} has {ITEM.VALUE} of free space</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description/>
                            <type>0</type>
                            <dependencies>
                                <dependency>
                                    <name>Unity pool {#NAME} has {ITEM.VALUE} of free space</name>
                                    <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;pool&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;FreePercents&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}&lt;({$UNITY_POOL_FREESPACE_DISASTER})</expression>
                                </dependency>
                                <dependency>
                                    <name>Unity pool {#NAME} has {ITEM.VALUE} of free space</name>
                                    <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;pool&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;FreePercents&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}&lt;({$UNITY_POOL_FREESPACE_HIGH})</expression>
                                </dependency>
                            </dependencies>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                </discovery_rule>
                <discovery_rule>
                    <name>Power Supplies</name>
                    <type>10</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;ps&quot;, &quot;--item&quot;,  &quot;Discovery&quot;]</key>
                    <delay>86400</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>30</lifetime>
                    <description/>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#NAME} state</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;ps&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>1200</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>3</value_type>
                            <allowed_hosts/>
                            <units/>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EMC Unity::Power Supplys</name>
                                </application>
                            </applications>
                            <valuemap>
                                <name>Unity power supplies state</name>
                            </valuemap>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;ps&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}=0</expression>
                            <name>Power Supplies {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>1</priority>
                            <description>The health of the component cannot be determined.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;ps&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}=20</expression>
                            <name>Power Supplies {#NAME} is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>5</priority>
                            <description>- The power supply has faulted.&#13;
- The power supply is not receiving power.&#13;
- The power supply has been removed.</description>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                </discovery_rule>
                <discovery_rule>
                    <name>Storage Processors</name>
                    <type>10</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;sp&quot;, &quot;--item&quot;,  &quot;Discovery&quot;]</key>
                    <delay>86400</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <delay_flex/>
                    <params/>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username/>
                    <password/>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>30</lifetime>
                    <description/>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#NAME} CPU utilization</name>
                            <type>10</type>
                            <snmp_community/>
                            <multiplier>0</multiplier>
                            <snmp_oid/>
                            <key>emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;sp&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;CPU&quot;, &quot;--id&quot;, &quot;{#ID}&quot;]</key>
                            <delay>300</delay>
                            <history>90</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>0</value_type>
                            <allowed_hosts/>
                            <units>%</units>
                            <delta>0</delta>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <formula>1</formula>
                            <delay_flex/>
                            <params/>
                            <ipmi_sensor/>
                            <data_type>0</data_type>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>EMC Unity::Storage Processors</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <application_prototypes/>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;sp&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;CPU&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}&gt;({$UNITY_SP_UTILIZATION_DISASTER})</expression>
                            <name>Storage Processor {#NAME} CPU utilization is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>5</priority>
                            <description/>
                            <type>0</type>
                            <dependencies/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;sp&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;CPU&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}&gt;({$UNITY_SP_UTILIZATION_HIGH})</expression>
                            <name>Storage Processor {#NAME} CPU utilization is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>4</priority>
                            <description/>
                            <type>0</type>
                            <dependencies>
                                <dependency>
                                    <name>Storage Processor {#NAME} CPU utilization is {ITEM.VALUE}</name>
                                    <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;sp&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;CPU&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}&gt;({$UNITY_SP_UTILIZATION_DISASTER})</expression>
                                </dependency>
                            </dependencies>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;sp&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;CPU&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}&gt;({$UNITY_SP_UTILIZATION_WARNING})</expression>
                            <name>Storage Processor {#NAME} CPU utilization is {ITEM.VALUE}</name>
                            <url/>
                            <status>0</status>
                            <priority>2</priority>
                            <description/>
                            <type>0</type>
                            <dependencies>
                                <dependency>
                                    <name>Storage Processor {#NAME} CPU utilization is {ITEM.VALUE}</name>
                                    <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;sp&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;CPU&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}&gt;({$UNITY_SP_UTILIZATION_DISASTER})</expression>
                                </dependency>
                                <dependency>
                                    <name>Storage Processor {#NAME} CPU utilization is {ITEM.VALUE}</name>
                                    <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;sp&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;CPU&quot;, &quot;--id&quot;, &quot;{#ID}&quot;].last()}&gt;({$UNITY_SP_UTILIZATION_HIGH})</expression>
                                </dependency>
                            </dependencies>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                </discovery_rule>
            </discovery_rules>
            <macros>
                <macro>
                    <macro>{$UNITY_DISKSTATE_DISASTER}</macro>
                    <value>20</value>
                </macro>
                <macro>
                    <macro>{$UNITY_DISKSTATE_HIGH}</macro>
                    <value>15</value>
                </macro>
                <macro>
                    <macro>{$UNITY_DISKSTATE_INF}</macro>
                    <value>0</value>
                </macro>
                <macro>
                    <macro>{$UNITY_DISKSTATE_WARNING}</macro>
                    <value>10</value>
                </macro>
                <macro>
                    <macro>{$UNITY_ENCLOSURES_SATE_DISASTER}</macro>
                    <value>20</value>
                </macro>
                <macro>
                    <macro>{$UNITY_ENCLOSURES_SATE_HIGH}</macro>
                    <value>10</value>
                </macro>
                <macro>
                    <macro>{$UNITY_ENCLOSURES_SATE_INFORMATION}</macro>
                    <value>0</value>
                </macro>
                <macro>
                    <macro>{$UNITY_ENCLOSURES_SATE_WARNING}</macro>
                    <value>7</value>
                </macro>
                <macro>
                    <macro>{$UNITY_ENCLOSURES_TEMPERATURE_DISASTER}</macro>
                    <value>50</value>
                </macro>
                <macro>
                    <macro>{$UNITY_ENCLOSURES_TEMPERATURE_HIGH}</macro>
                    <value>30</value>
                </macro>
                <macro>
                    <macro>{$UNITY_FCP_LINK_HIGH}</macro>
                    <value>1</value>
                </macro>
                <macro>
                    <macro>{$UNITY_FCP_SATE_DISASTER}</macro>
                    <value>20</value>
                </macro>
                <macro>
                    <macro>{$UNITY_FCP_SATE_HIGH}</macro>
                    <value>15</value>
                </macro>
                <macro>
                    <macro>{$UNITY_FCP_SATE_INFORMATION}</macro>
                    <value>0</value>
                </macro>
                <macro>
                    <macro>{$UNITY_FCP_SATE_WARNING}</macro>
                    <value>7</value>
                </macro>
                <macro>
                    <macro>{$UNITY_LUN_REASPONSE_DISASTER}</macro>
                    <value>50</value>
                </macro>
                <macro>
                    <macro>{$UNITY_LUN_REASPONSE_HIGH}</macro>
                    <value>30</value>
                </macro>
                <macro>
                    <macro>{$UNITY_LUN_REASPONSE_WARNING}</macro>
                    <value>20</value>
                </macro>
                <macro>
                    <macro>{$UNITY_POOL_FREESPACE_DISASTER}</macro>
                    <value>2</value>
                </macro>
                <macro>
                    <macro>{$UNITY_POOL_FREESPACE_HIGH}</macro>
                    <value>5</value>
                </macro>
                <macro>
                    <macro>{$UNITY_POOL_FREESPACE_WARNING}</macro>
                    <value>10</value>
                </macro>
                <macro>
                    <macro>{$UNITY_PS_SATE_DISASTER}</macro>
                    <value>20</value>
                </macro>
                <macro>
                    <macro>{$UNITY_PS_SATE_INFORMATION}</macro>
                    <value>0</value>
                </macro>
                <macro>
                    <macro>{$UNITY_SP_UTILIZATION_DISASTER}</macro>
                    <value>95</value>
                </macro>
                <macro>
                    <macro>{$UNITY_SP_UTILIZATION_HIGH}</macro>
                    <value>90</value>
                </macro>
                <macro>
                    <macro>{$UNITY_SP_UTILIZATION_WARNING}</macro>
                    <value>80</value>
                </macro>
                <macro>
                    <macro>{$UNITY_SYSTEM_RESPONSE_DISASTER}</macro>
                    <value>50</value>
                </macro>
                <macro>
                    <macro>{$UNITY_SYSTEM_RESPONSE_HIGH}</macro>
                    <value>20</value>
                </macro>
                <macro>
                    <macro>{$UNITY_SYSTEM_RESPONSE_WARNING}</macro>
                    <value>10</value>
                </macro>
                <macro>
                    <macro>{$UNITY_SYSTEM_SATE_DISASTER_01}</macro>
                    <value>25</value>
                </macro>
                <macro>
                    <macro>{$UNITY_SYSTEM_SATE_DISASTER_02}</macro>
                    <value>30</value>
                </macro>
                <macro>
                    <macro>{$UNITY_SYSTEM_SATE_HIGH_01}</macro>
                    <value>20</value>
                </macro>
                <macro>
                    <macro>{$UNITY_SYSTEM_SATE_HIGH_02}</macro>
                    <value>15</value>
                </macro>
                <macro>
                    <macro>{$UNITY_SYSTEM_SATE_WARNING_01}</macro>
                    <value>7</value>
                </macro>
                <macro>
                    <macro>{$UNITY_SYSTEM_SATE_WARNING_02}</macro>
                    <value>10</value>
                </macro>
                <macro>
                    <macro>{$UNITY_SYSTEM_SATE_WARNING_03}</macro>
                    <value>0</value>
                </macro>
            </macros>
            <templates>
                <template>
                    <name>Template ICMP Ping</name>
                </template>
            </templates>
            <screens/>
        </template>
    </templates>
    <triggers>
        <trigger>
            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;gs&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;].last()}=({$UNITY_SYSTEM_SATE_DISASTER_01})</expression>
            <name>Health state on {HOST.NAME} is {ITEM.VALUE}</name>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description>Failed and recovery may not be possible. This condition has resulted in data loss and should be remedied immediately.</description>
            <type>0</type>
            <dependencies/>
        </trigger>
        <trigger>
            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;gs&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;].last()}=({$UNITY_SYSTEM_SATE_DISASTER_02})</expression>
            <name>Health state on {HOST.NAME} is {ITEM.VALUE}</name>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description>Completely failed and cannot be recovered.</description>
            <type>0</type>
            <dependencies/>
        </trigger>
        <trigger>
            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;gs&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;].last()}=({$UNITY_SYSTEM_SATE_HIGH_01})</expression>
            <name>Health state on {HOST.NAME} is {ITEM.VALUE}</name>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description>Failing and some or all functions may be degraded or not working. This condition has a significant impact on the system and should be remedied immediately.</description>
            <type>0</type>
            <dependencies/>
        </trigger>
        <trigger>
            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;gs&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;].last()}=({$UNITY_SYSTEM_SATE_HIGH_02})</expression>
            <name>Health state on {HOST.NAME} is {ITEM.VALUE}</name>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description>Working and performing all functions but overall performance is degraded. This condition has a minor impact on the system and should be remedied at some point, but does not have to be fixed immediately.</description>
            <type>0</type>
            <dependencies/>
        </trigger>
        <trigger>
            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;gs&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;].last()}=({$UNITY_SYSTEM_SATE_WARNING_01})</expression>
            <name>Health state on {HOST.NAME} is {ITEM.VALUE}</name>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description>Working correctly, but there could be a problem.</description>
            <type>0</type>
            <dependencies/>
        </trigger>
        <trigger>
            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;gs&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;].last()}=({$UNITY_SYSTEM_SATE_WARNING_02})</expression>
            <name>Health state on {HOST.NAME} is {ITEM.VALUE}</name>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description>Working and performing all functions, but the performance may not be optimum.</description>
            <type>0</type>
            <dependencies/>
        </trigger>
        <trigger>
            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;gs&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;Health&quot;].last()}=({$UNITY_SYSTEM_SATE_WARNING_03})</expression>
            <name>Health state on {HOST.NAME} is {ITEM.VALUE}</name>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description>Status is unknown.</description>
            <type>0</type>
            <dependencies/>
        </trigger>
        <trigger>
            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;gs&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;].last()}&gt;={$UNITY_SYSTEM_RESPONSE_HIGH}</expression>
            <name>Response time on {HOST.NAME} is {ITEM.VALUE}</name>
            <url/>
            <status>0</status>
            <priority>4</priority>
            <description/>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Response time on {HOST.NAME} is {ITEM.VALUE}</name>
                    <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;gs&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;].last()}&gt;{$UNITY_SYSTEM_RESPONSE_DISASTER}</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;gs&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;].last()}&gt;={$UNITY_SYSTEM_RESPONSE_WARNING}</expression>
            <name>Response time on {HOST.NAME} is {ITEM.VALUE}</name>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <dependencies>
                <dependency>
                    <name>Response time on {HOST.NAME} is {ITEM.VALUE}</name>
                    <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;gs&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;].last()}&gt;={$UNITY_SYSTEM_RESPONSE_HIGH}</expression>
                </dependency>
                <dependency>
                    <name>Response time on {HOST.NAME} is {ITEM.VALUE}</name>
                    <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;gs&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;].last()}&gt;{$UNITY_SYSTEM_RESPONSE_DISASTER}</expression>
                </dependency>
            </dependencies>
        </trigger>
        <trigger>
            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;gs&quot;, &quot;--item&quot;, &quot;Status&quot;, &quot;--statusmode&quot;, &quot;RT&quot;].last()}&gt;{$UNITY_SYSTEM_RESPONSE_DISASTER}</expression>
            <name>Response time on {HOST.NAME} is {ITEM.VALUE}</name>
            <url/>
            <status>0</status>
            <priority>5</priority>
            <description/>
            <type>0</type>
            <dependencies/>
        </trigger>
        <trigger>
            <expression>{Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;disk&quot;, &quot;--item&quot;, &quot;Data&quot;].regexp(^OK$)}=0 or {Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dae&quot;, &quot;--item&quot;, &quot;Data&quot;].regexp(^OK$)}=0 or {Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;dpe&quot;, &quot;--item&quot;, &quot;Data&quot;].regexp(^OK$)}=0 or {Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;fcp&quot;, &quot;--item&quot;, &quot;Data&quot;].regexp(^OK$)}=0 or {Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;lun&quot;, &quot;--item&quot;, &quot;Data&quot;].regexp(^OK$)}=0 or {Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;pool&quot;, &quot;--item&quot;, &quot;Data&quot;].regexp(^OK$)}=0 or {Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;ps&quot;, &quot;--item&quot;, &quot;Data&quot;].regexp(^OK$)}=0 or {Template EMC Unity v01:emc_unity.py[&quot;--host&quot;, &quot;{HOST.NAME}&quot;, &quot;--type&quot;, &quot;sp&quot;, &quot;--item&quot;, &quot;Data&quot;].regexp(^OK$)}=0</expression>
            <name>{HOST.NAME} UNITY data collector error</name>
            <url/>
            <status>0</status>
            <priority>2</priority>
            <description/>
            <type>0</type>
            <dependencies/>
        </trigger>
    </triggers>
    <value_maps>
        <value_map>
            <name>Unity disk state</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Unknown</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>OK</newvalue>
                </mapping>
                <mapping>
                    <value>10</value>
                    <newvalue>Degraded/Warning</newvalue>
                </mapping>
                <mapping>
                    <value>20</value>
                    <newvalue>Major failure</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>Unity enclosures (DAE) state</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Unknown</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>OK</newvalue>
                </mapping>
                <mapping>
                    <value>7</value>
                    <newvalue>OK_BUT</newvalue>
                </mapping>
                <mapping>
                    <value>10</value>
                    <newvalue>Degraded/Warning</newvalue>
                </mapping>
                <mapping>
                    <value>20</value>
                    <newvalue>Major failure</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>Unity enclosures (DPE) state</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Unknown</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>OK</newvalue>
                </mapping>
                <mapping>
                    <value>7</value>
                    <newvalue>OK_BUT</newvalue>
                </mapping>
                <mapping>
                    <value>10</value>
                    <newvalue>Degraded/Warning</newvalue>
                </mapping>
                <mapping>
                    <value>20</value>
                    <newvalue>Major failure</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>Unity FC ports state</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Unknown</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>OK</newvalue>
                </mapping>
                <mapping>
                    <value>7</value>
                    <newvalue>OK BUT</newvalue>
                </mapping>
                <mapping>
                    <value>15</value>
                    <newvalue>Minor failure</newvalue>
                </mapping>
                <mapping>
                    <value>20</value>
                    <newvalue>Major failure</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>Unity power supplies state</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Unknown</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>OK</newvalue>
                </mapping>
                <mapping>
                    <value>20</value>
                    <newvalue>Major failure</newvalue>
                </mapping>
            </mappings>
        </value_map>
        <value_map>
            <name>Unity system state</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>Unknown</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>OK</newvalue>
                </mapping>
                <mapping>
                    <value>7</value>
                    <newvalue>OK BUT</newvalue>
                </mapping>
                <mapping>
                    <value>10</value>
                    <newvalue>Degraded/Warning</newvalue>
                </mapping>
                <mapping>
                    <value>15</value>
                    <newvalue>Minor failure</newvalue>
                </mapping>
                <mapping>
                    <value>20</value>
                    <newvalue>Major failure</newvalue>
                </mapping>
                <mapping>
                    <value>25</value>
                    <newvalue>Critical failure</newvalue>
                </mapping>
                <mapping>
                    <value>30</value>
                    <newvalue>Non-recoverable error</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>
